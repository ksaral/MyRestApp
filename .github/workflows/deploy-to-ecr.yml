name: Build and Push to AWS ECR

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  id-token: write  # Needed for OIDC authentication
  contents: read   # Allows reading repository contents

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      # Set up JDK for building the WAR file
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Use OpenJDK (AdoptOpenJDK)
          java-version: '17'
          cache: 'maven'

      # Build the WAR file using Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1  # Update if your region is different

      - name: Login to AWS Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build Docker Image with Arguments
        run: |
          docker build --build-arg DB_URL=${{ secrets.DB_URL }} \
                       --build-arg DB_USERNAME=${{ secrets.DB_USERNAME }} \
                       --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
                       -t ${{ secrets.ECR_REPOSITORY }}:latest .

      - name: Tag Docker Image
        run: |
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest public.ecr.aws/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker Image to AWS ECR
        run: |
          docker push public.ecr.aws/${{ secrets.ECR_REPOSITORY }}:latest
